#!/usr/bin/env bash -e
#
#  Terramorf is a thin wrapper for Terraform
#  Author: Everaldo Canuto <everaldo.canuto@gmail.com>
#
#  This is free and unencumbered software released into the public domain.
#
#  Anyone is free to copy, modify, publish, use, compile,  sell,  or  distribute
#  this software, either in source code form or as a compiled  binary,  for  any
#  purpose, commercial or non-commercial, and by any means.
#
#  In jurisdictions that recognize copyright laws, the author or authors of this
#  software dedicate any and all copyright  interest  in  the  software  to  the
#  public domain. We make this dedication for the benefit of the public at large
#  and to the detriment of our heirs and successors. We intend  this  dedication
#  to be an overt act of relinquishment in perpetuity of all present and  future
#  rights to this software under copyright law.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY  KIND,  EXPRESS  OR
#  IMPLIED, INCLUDING BUT NOT LIMITED  TO  THE  WARRANTIES  OF  MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT  SHALL  THE
#  AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,  WHETHER  IN  AN
#  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN  CONNECTION
#  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Application name and version
APPNAME=terramorf
VERSION=0.2.1

# Command line args
ENVIRON=$1
COMMAND=$2
CMDARGS=${@:3}

# Environment files
ENVIRON_PATH=environments
ENVIRON_LIST=$(cd $ENVIRON_PATH ; ls *.backend.tfvars | cut -d. -f1)
BACKEND_PATH="$ENVIRON_PATH/$ENVIRON.backend.tfvars"
VARFILE_PATH="$ENVIRON_PATH/$ENVIRON.varfile.tfvars"

# If invalid environment (not in environment list), show usage and exit
if [[ ! $ENVIRON_LIST =~ (^|[[:space:]])$ENVIRON($|[[:space:]]) ]]; then
    echo "Usage: $APPNAME [envivonment] <subcommand> [args]"
    echo ""
    echo "Avaliable environments: ${ENVIRON_LIST//$'\n'/ }"
    exit 1
fi

# Add backend config file param for init command
if [[ -f $BACKEND_PATH && $COMMAND == "init" ]]; then
    BACKEND_ARGS="-reconfigure -backend-config=$BACKEND_PATH"
fi

# Add environment variables file
if [[ -f $VARFILE_PATH && $COMMAND != "version" ]]; then
    VARFILE_ARGS=-var-file="$VARFILE_PATH"
fi

# Terraform version required, try to download and install
TERRAFORM_CMD=terraform
TERRAFORM_REX='^[^#]+required_version.+"'
TERRAFORM_VER=$(grep -Eohm1 $TERRAFORM_REX *.tf | grep -Eo "[0-9.]+" || true)
if [[ ! -z "$TERRAFORM_VER" ]]; then
    echo "Terraform $TERRAFORM_VER required"

    TERRAMORF_DIR="$HOME/.local/share/terramorf/bin"
    TERRAFORM_BIN="$TERRAMORF_DIR/terraform-$TERRAFORM_VER"
    if [[ ! -f $TERRAFORM_BIN ]]; then
        OSNAME=$(uname | tr '[:upper:]' '[:lower:]')
        MAARCH=$(uname -m)
        if [[ "$MAARCH" = x86_64* ]]; then
            MAARCH=amd64
        elif [[ "$MAARCH" = i*86 ]]; then
            MAARCH=386
        fi

        BASE_URL="https://releases.hashicorp.com/terraform/$TERRAFORM_VER"
        FILE_URL="$BASE_URL/terraform_${TERRAFORM_VER}_${OSNAME}_${MAARCH}.zip"
        TEMP_DIR=$(mktemp -d -t terramorf)
        TEMP_ZIP="$TEMP_DIR/terraform.zip"

        echo "Download $FILE_URL"
        curl -so $TEMP_ZIP $FILE_URL
        unzip -jo $TEMP_ZIP terraform -d $TEMP_DIR
        mkdir -p $TERRAMORF_DIR
        mv $TEMP_DIR/terraform $TERRAFORM_BIN
        rm -rf $TEMP_DIR
    fi

    if [[ -f $TERRAFORM_BIN ]]; then
        TERRAFORM_CMD=$TERRAFORM_BIN
    fi

    echo
fi

# Call terraform with required params
set -x
$TERRAFORM_CMD $COMMAND $CMDARGS $BACKEND_ARGS $VARFILE_ARGS
